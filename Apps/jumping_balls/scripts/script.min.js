"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var s=e[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}function _createSuper(t){return function(){var e,n=_getPrototypeOf(t);if(_isNativeReflectConstruct()){var s=_getPrototypeOf(this).constructor;e=Reflect.construct(n,arguments,s)}else e=n.apply(this,arguments);return _possibleConstructorReturn(this,e)}}function _possibleConstructorReturn(t,e){return!e||"object"!==_typeof(e)&&"function"!=typeof e?_assertThisInitialized(t):e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function _getPrototypeOf(t){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&_setPrototypeOf(t,e)}function _setPrototypeOf(t,e){return(_setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Shape=function t(e,n,s,i,o){_classCallCheck(this,t),this.x=e,this.y=n,this.velX=s,this.velY=i,this.exists=o},Ball=function(t){_inherits(n,Shape);var e=_createSuper(n);function n(t,s,i,o,l,r,a){var c;return _classCallCheck(this,n),(c=e.call(this,t,s,i,o,a)).color=l,c.size=r,c}return _createClass(n,[{key:"draw",value:function(){ctx.beginPath(),ctx.fillStyle=this.color,ctx.arc(this.x,this.y,this.size,0,2*Math.PI),ctx.fill()}},{key:"update",value:function(){this.x+this.size>=width?(this.velX=-this.velX,this.x=width-1.2*this.size):this.x-this.size<=0&&(this.velX=-this.velX,this.x=1.2*this.size),this.y+this.size>=height?(this.velY=-this.velY,this.y=height-1.2*this.size):this.y-this.size<=0&&(this.velY=-this.velY,this.y=1.2*this.size),this.x+=this.velX,this.y+=this.velY}},{key:"collisionDetect",value:function(){for(var t=0;t<balls.length;t++)if(this!==balls[t]&&balls[t].exists){var e=this.x-balls[t].x,n=this.y-balls[t].y;if(Math.sqrt(e*e+n*n)<this.size+balls[t].size)return this.velX=-this.velX,this.velY=-this.velY,balls[t].velX=-balls[t].velX,balls[t].velY=-balls[t].velY,!0}}}]),n}();Ball.countBalls=function(){return balls.reduce((function(t,e){return e.exists?t+1:t+0}),0)},Ball.mouseCollision=function(){for(var t=!0,e=0;e<balls.length;e++){var n=balls[e].x-mouseX,s=balls[e].y-mouseY;Math.sqrt(n*n+s*s)<balls[e].size&&(mouseX=void 0,mouseY=void 0,balls[e].exists=!1,t=!1)}t&&++Ball.miss};var width,height,mouseX,mouseY,canvas=document.querySelector("canvas"),ctx=canvas.getContext("2d"),game=!0;function random(t,e){return Math.floor(Math.random()*(e-t)+t)}function init(){width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight}init(),window.addEventListener("resize",init),canvas.addEventListener("mousedown",(function(t){mouseX=t.clientX,mouseY=t.clientY,Ball.mouseCollision(),showInfo()}));var balls=[];function fullBalls(){Ball.count=20;for(;balls.length<Ball.count;){var t=new Ball(random(0,width),random(0,height),random(-7,7),random(-7,7),"rgb("+random(0,255)+","+random(0,255)+","+random(0,255)+")",random(20,30),!0);t.collisionDetect()||balls.push(t)}}function loop(){ctx.fillStyle="rgba(0,0,0,0.25)",ctx.fillRect(0,0,width,height);for(var t=0;t<balls.length;t++)balls[t].exists&&(balls[t].draw(),balls[t].update(),balls[t].collisionDetect());0===Ball.countBalls()?(cancelAnimationFrame(loop),showEnd()):requestAnimationFrame(loop)}function showInfo(){var t=document.getElementById("count"),e=document.getElementById("miss");t.textContent=Ball.countBalls(),e.textContent=Ball.miss}function showEnd(){var t=document.getElementById("end"),e=document.getElementById("countMiss");t.classList.remove("no-display"),canvas.classList.add("no-display"),e.textContent=Ball.miss}var btnStart=document.getElementById("btnStart"),btnRestart=document.getElementById("btnRestart");function startGame(){Ball.count=1,Ball.miss=0,balls=[],canvas.classList.remove("no-display"),fullBalls(),loop(),showInfo()}btnStart.addEventListener("mousedown",(function(t){document.getElementById("start").classList.add("no-display"),startGame()})),btnRestart.addEventListener("mousedown",(function(t){document.getElementById("end").classList.add("no-display"),startGame()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
