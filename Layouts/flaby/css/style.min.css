@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-Thin.ttf) format("truetype");font-weight:100;font-style:normal}@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-SemiBold.ttf) format("truetype");font-weight:600;font-style:normal}@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Raleway;src:url(../fonts/Raleway/Raleway-Black.ttf) format("truetype");font-weight:900;font-style:normal}@font-face{font-family:Roboto-Slab;src:url(../fonts/Roboto_Slab/RobotoSlab-Thin.ttf) format("truetype");font-weight:100;font-style:normal}@font-face{font-family:Roboto-Slab;src:url(../fonts/Roboto_Slab/RobotoSlab-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:Roboto-Slab;src:url(../fonts/Roboto_Slab/RobotoSlab-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Roboto-Slab;src:url(../fonts/Roboto_Slab/RobotoSlab-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Roboto-Slab;src:url(../fonts/Roboto_Slab/RobotoSlab-Black.ttf) format("truetype");font-weight:900;font-style:normal}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%}button,input,optgroup,select,textarea{margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box;font-size:calc(1vw + .1em)}body{margin:0}.capitalize{text-transform:capitalize}.top{max-width:50vw;margin:0 auto;text-align:center;font-family:Roboto-Slab}.top__h1{font-size:.9rem;font-weight:400;line-height:1rem;color:#7c7c7c}.top__text{font-size:1.2rem;font-weight:500;text-transform:uppercase;letter-spacing:2.4px;margin-top:.9em}.top__line{background:#2eb0ec;max-width:2vw;margin:1em auto 2.5em;height:2px}.head__h1{font-size:1.1rem;opacity:.4;font-weight:600;color:#494949}.head__h2{font-size:1.6rem;font-weight:600;color:#494949}.head__text{font-size:1rem;font-weight:500;line-height:1.6rem;color:#7c7c7c}.button{background:#66d4f4;display:inline-block;width:7.5em;height:2.5em;text-align:center;border-radius:1.25em}.button__text{font-size:.7rem;text-transform:uppercase;color:#fff;vertical-align:middle;line-height:2.5rem;font-weight:700}.header{background:url(../img/header_bg_fullHD.png) 0 0/100% no-repeat;overflow:hidden;height:110vh;margin-top:-5vw;padding-top:7vw}@media screen and (max-width:1000px){.header{height:80ch;padding-top:0;margin:0}}.header__top{max-width:70vw;margin:0 auto;display:flex;align-items:center;justify-content:space-between}.header__top__logo{background:#42a8f6}.header__top__logo:hover{cursor:pointer}@media screen and (max-width:1000px){.header__top{display:block}.header__top__logo{width:100vw}.header__top__menu__list{padding:0;font-size:1rem;justify-content:space-between}}.header__top__menu__list{list-style:none;text-transform:uppercase;font-family:Raleway;font-weight:600;display:flex}.header__top__menu__list__item a{color:#fff;padding:.5em;transition:.25s linear;border-radius:.3em;text-decoration:none}.header__top__menu__list__item a:hover{background:#fff;cursor:pointer;color:#42a8f6}.header__top__menu__list__item:not(:last-child){margin-right:1em}.header__top__menu__login{background:#42a8f6;color:#fff;padding:1em 2em;border-radius:.5em;transition:.25s linear}.header__top__menu__login:hover{background:#fff;cursor:pointer;color:#42a8f6}.header__line{background:#fff;max-width:70vw;margin:1.5em auto 13em;height:1px;opacity:.6}@media screen and (max-width:1000px){.header__line{margin-bottom:7em}}.header__bottom{max-width:70vw;margin:0 auto}.header__bottom__container{max-width:35vw}.header__bottom__container__h1{font:400 2rem Roboto-Slab;text-transform:uppercase;color:#fffefe}.header__bottom__container__text{font:500 1.2rem Raleway;margin:1.5em 0 2em;color:#fefefe}.header__bottom__container__buttons{font-family:Raleway;font-weight:600}.header__bottom__container__buttons__google{background:#fff;margin-right:1em;display:inline-block;width:10.9em;height:4em;border-radius:.5em;text-align:center}.header__bottom__container__buttons__google__text{background:url(../img/google_play.png) 0 0/1.5em no-repeat;line-height:4em;vertical-align:middle;background-position-y:center;padding:1em 0 1em 2em;color:#000}.header__bottom__container__buttons__learn{background:#4894ce;display:inline-block;width:10.9em;height:4em;border-radius:.5em;opacity:.7;text-align:center}.header__bottom__container__buttons__learn__text{line-height:4em;vertical-align:middle;color:#fff}.footer{max-width:80vw;margin:5em auto 0}.footer__line{background:#dfdfdf;height:1px;margin:3em 0}.footer__left{display:inline-block;width:20%;margin-right:5em;font-family:Raleway}.footer__left__text{font-size:.7rem;font-weight:500;line-height:1.4rem;color:#7c7c7c}.footer__left__soc__facebook{background:#3b579d;display:inline-block;height:1.5rem;width:1.5em;border-radius:5em}.footer__left__soc__google{background:#da4835;display:inline-block;height:1.5rem;width:1.5em;border-radius:5em}.footer__left__soc__twitter{background:#55acee;display:inline-block;height:1.5rem;width:1.5em;border-radius:5em}.footer__right{display:inline-block;vertical-align:top;width:70%}.footer__right__cols{display:flex;justify-content:space-between}.footer__right__col{font-family:Raleway}.footer__right__col__h1{font-size:1rem;font-weight:700;color:#494949}.footer__right__col__list{list-style:none;font-size:.7rem;font-weight:500;line-height:1.4rem;color:#7c7c7c;padding:0}.services{padding-top:3em}.services__bottom{max-width:85vw;margin:0 auto;font-family:Raleway}.services__bottom__elements{display:flex;justify-content:space-between;margin-top:4em}.services__bottom__elements__item{text-align:center}.services__bottom__elements__item__icon{width:5em;height:4em}.services__bottom__elements__item__h1{color:#494949;font-size:.9rem;font-weight:700;margin-top:2em;margin-bottom:1.5em}.services__bottom__elements__item__text{font-size:.8rem;font-weight:500;line-height:1.3rem;color:#7c7c7c}.features{max-width:35vw;margin-left:50vw;margin-top:7em;padding-top:7em;font-family:Raleway}.features-bg{background:url(../img/bg_features.png) -14vw/114vw no-repeat;height:50vw}.features__list__item{list-style:none;background:url(../img/bullet_point.svg) left center/contain no-repeat;padding-left:2em;font-size:.7rem;font-weight:500;line-height:1.5rem;color:#7c7c7c;margin-left:-3.7em;margin-top:1em}.other-services__bottom{font-family:Raleway;max-width:90vw;margin:0 auto;display:grid;grid-template-columns:1fr 1fr 1fr;grid-row-gap:2em;justify-items:center}.other-services__bottom__item{width:20vw;display:flex}.other-services__bottom__item__image{margin-top:-.5em;height:4em;width:1.5em;background-repeat:no-repeat;background-position:center top;background-size:contain}.other-services__bottom__item__h1,.other-services__bottom__item__text{font-weight:600;padding-left:.8em}.other-services__bottom__item__h1{font-size:.9rem;color:#494949;margin-bottom:1em}.other-services__bottom__item__text{font-size:.7rem;color:#7c7c7c;line-height:1.3rem}.customer{background:url(../img/costomer_bg.png);margin-top:4em;padding-top:3em;padding-bottom:3em}.customer__cards{max-width:60vw;margin:5em auto 0}.customer__cards__card{background:#fff;position:relative;text-align:center;font-family:Raleway;padding:3em 4em 5em;border-radius:.5em}.customer__cards__card__icon{background:orange;position:absolute;width:4em;height:4em;left:46%;top:-2em;border-radius:5em;border:5px solid #fff}.customer__cards__card__h1{font-size:1rem;font-weight:700;color:#494949;line-height:1.5rem}.customer__cards__card__h2{font-size:.75rem;font-weight:500;color:#7c7c7c;line-height:1.5rem}.customer__cards__card__text{max-width:70%;margin:2em auto 0;font-size:.9rem;font-weight:500;line-height:1.5rem;color:#7c7c7c}.customer__arrows{max-width:20vw;margin:2em auto 0;display:flex;justify-content:space-between}.resourse{padding-left:10vw;padding-top:10em;padding-bottom:5em}.resourse__left{display:inline-block;width:50%;vertical-align:top;padding-right:5em}.resourse__right{background:url(../img/mockup.png) center/contain no-repeat;display:inline-block;width:40%;height:20em}.resourse__text{font:500 .7rem/1.3rem Raleway;color:#7c7c7c;margin-top:2em}.pricing{background:url(../img/bg_pricing.png) 0 0/contain;padding-top:5em;padding-bottom:5em}.pricing__prices{max-width:65vw;margin:0 auto;display:flex;justify-content:space-between}.pricing__prices__item{background:url(../img/bg_price.png) 0 0/contain no-repeat;width:20vw;text-align:center;font-family:Raleway;padding:2em 0;border:1px solid rgba(0,0,0,.1);border-radius:1.5em;transition:.25s linear}.pricing__prices__item:hover{transform:scale(1.1);cursor:pointer}.pricing__prices__item__icon{max-width:30%;margin:0 auto;height:5em;width:5em}.pricing__prices__item__h1{font-size:.8rem;font-weight:700;color:#494949;margin-top:3em}.pricing__prices__item__cost{background:linear-gradient(34deg,#6af4f9 0,#2eb0ec 100%) text;color:#2eb0ec;-webkit-background-clip:text;-webkit-text-fill-color:transparent;text-align:center}.pricing__prices__item__cost__dollar{font-size:1rem;font-weight:500;vertical-align:top;line-height:3.6rem}.pricing__prices__item__cost__num{font-size:3.6rem;font-weight:700;vertical-align:top}.pricing__prices__item__cost__money{font-size:1rem;font-weight:500;vertical-align:bottom;margin-left:-.5em}.pricing__prices__item__text{margin-top:1em;margin-bottom:1.5em;font-size:.7rem;color:#7c7c7c;font-weight:500;line-height:2rem}.subscribe{text-align:center;font-family:Raleway}.subscribe__input{margin:2em 0;border-radius:1.9em;height:3em;width:19em;box-shadow:0 8px 16px rgba(92,149,161,.07);border:1px solid rgba(0,0,0,.03);padding-left:1em}.subscribe__example{background:#f5fafa;border-radius:1.9em;height:3em;width:19em;margin:0 auto}.subscribe__example__text{vertical-align:middle;line-height:3rem;font-size:.7rem;color:#050505;font-weight:700;opacity:.35}.subscribe__button{margin-top:2em;width:19em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
